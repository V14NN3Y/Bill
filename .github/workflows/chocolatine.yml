env:
  MIRROR_URL: "git@github.com:EpitechPromo2028/B-DOP-200-COT-2-2-chocolatine-bill.adjagboni.git"
  EXECUTABLES: "104neutrinos"
name: Chocolatine
run-name: check_if_the_push_or_the_pull_is_good
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

jobs:
  check_coding_style:
    name: check_coding_style
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          check.sh $(pwd) $(pwd)
          if [ -s coding-style-reports.log ]; then
            while IFS= read -r line; do
              echo "::error file=${{github.workspace}}/${line#* }::${line}"
            done < coding-style-reports.log
            exit 1
          fi

  check_program_compilation:
    name: check_program_compilation
    needs: check_coding_style
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Compilation
        run: make
        timeout-minutes: 2
      - name: Cleaner
        run: make clean
      - name: Check file exist
        run: |
          if [ -f 104neutrinos ]; then
            if [ ! -x 104neutrinos ]; then
              exit 1
            fi
          else
            exit 1 
          fi

  run_tests:
    name: run_tests
    needs: check_program_compilation
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Compilation
        run: |
          make tests_run
        timeout-minutes: 2

  push_to_mirror:
        name: push_to_mirror
        needs: run_tests
        runs-on: ubuntu-latest
        if: ${{ github.event_name }} == "push"
        steps:
          - name: checkout-repository
            uses: actions/checkout@v4
            with:
                fetch-depth: 0
          - name:
            uses: pixta-dev/repository-mirroring-action@v1
            with:
              target_repo_url: ${{ env.MIRROR_URL }}
              ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}